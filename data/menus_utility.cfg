///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
reui = [
    clearconsole
    exec "data/menus.cfg"
    echo "^f2*** Menus Reinitialized ***  ^f6This is for testing; it will break stuff; ^f3delete ^"config.cfg^" after use."
]


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  These are hard-coded aliases that are updated upon mouse rollover:
guirollovername          = ""
guirolloveraction        = ""
guirolloverimgpath       = ""
guirolloverimgaction     = ""
guirolloverpreviewname   = ""
guirolloverpreviewaction = ""

checkrolloveraction = [
    if (>= (strstr $guirolloveraction $arg1) 0) [
        if (>= $numargs 2) [arg2] [result $guirolloveraction]
    ]
]


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ARGS 1:          ...
//      2: INT      ...
//      3: [LIST]   ...
//      4:          ...
//      5:          ...
//      6:          ...
guilistsplit = [
    guilist [
        iZ = (div (+ (listlen $arg3) (- $arg2 1)) $arg2)
        loop iA $arg2 [
            guilist [
                if (>= $numargs 6) [arg6]
                loopsublist $arg1 $arg3 (* $iA $iZ) $iZ [arg4]
            ]
            if (&& (>= $numargs 5) (< (+ $iA 1) $arg2)) [arg5]
        ]
    ]
]


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ARGS 1: STRING   "Label"
//      2: FLOAT    Label Strut Width
//      3: STRING   Variable
//      4: FLOAT    Variable-Field Width
//      5: FLOAT    Variable-Decrement Step
//      6: FLOAT    Variable-Increment Step
////guifield2 = [
////    guilist [// H
////        guilist [// V
////            guistrut @arg2 1
////            guilist [guitext @arg1]
////        ]
////        guifield @arg3 @arg4
////        guibutton "" [@arg3 (+fround $@arg3 @arg5)] "val_dec"
////        guibutton "" [@arg3 (+fround $@arg3 @arg6)] "val_inc"
////    ]
////]


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// "Free" in the sense that it is not shackled by an oppressive table.
// ARGS 1: FLOAT    Column Width
//      2: INT      Column Align          -2: NoAlign  -1: Left  0: Center  1: Right
//      3: [LIST]   [Column Contents]
//      ** Repeat, up to 6 columns. **
guifreerow = [
    guilist [//H                V                                                      H
        if (>= $numargs  3) [guilist [guistrut $arg1  1; if (= $arg2  -2) [@arg3 ][guialign $arg2  [@arg3 ]] ]] //  Column 1
        if (>= $numargs  6) [guilist [guistrut $arg4  1; if (= $arg5  -2) [@arg6 ][guialign $arg5  [@arg6 ]] ]] //  Column 2
        if (>= $numargs  9) [guilist [guistrut $arg7  1; if (= $arg8  -2) [@arg9 ][guialign $arg8  [@arg9 ]] ]] //  Column 3
        if (>= $numargs 12) [guilist [guistrut $arg10 1; if (= $arg11 -2) [@arg12][guialign $arg11 [@arg12]] ]] //  Column 4
        if (>= $numargs 15) [guilist [guistrut $arg13 1; if (= $arg14 -2) [@arg15][guialign $arg14 [@arg15]] ]] //  Column 5
        if (>= $numargs 18) [guilist [guistrut $arg16 1; if (= $arg17 -2) [@arg18][guialign $arg17 [@arg18]] ]] //  Column 6
        //if (>= $numargs 21) [guilist [guistrut $arg19 1; if (= $arg20 -2) [@arg21][guialign $arg20 [@arg21]] ]] //  Column 7
        //if (>= $numargs 24) [guilist [guistrut $arg22 1; if (= $arg23 -2) [@arg24][guialign $arg23 [@arg24]] ]] //  Column 8
        //if (>= $numargs 27) [guilist [guistrut $arg25 1; if (= $arg26 -2) [@arg27][guialign $arg26 [@arg27]] ]] //  Column 9
    ]
]


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
nodebug [
    defvar  ML_NumOfMaps -1 0 16384
    defvar  ML_NumOfCols  0 0   512
    defvar  ML_MapsPerTab 0 0   512
    defvar  ML_NumOfTabs  0 0   256

    defvar  ML_CurrentTab 0 0   256

    defvar  ML_ModeType  0 0     8
    defvar  ML_ModeVrty  0 0     3
    defvar  ML_Mode     -3 1    25
    defvar  ML_ModeMaps  0 0     2
    defsvar ML_ModeName  "coop"

    defsvar ML_MapName ""
]

//  This generates full-tabs with:  MapList, Map Screenshot, GameMode Selection.
// ARGS 1: FirstTabLabel = "STRING"
//      2: MapList       = [LIST]
//      3: ColumnWidth   = INT
//      4: MapsPerColumn = INT
//      5: ColumnsPerTab = INT
guimaplist = [
    ML_NumOfMaps  (- (listlen $arg2) 1) // List index starts at 0.
    ML_NumOfCols  (+ (ceil (divf (+ $ML_NumOfMaps 1) $arg4)))
    ML_MapsPerTab (* $arg4 $arg5)
    ML_NumOfTabs  (max (+ (ceil (divf $ML_NumOfCols $arg5))) 1)

    loop iTab $ML_NumOfTabs [
        ML_CurrentTab (+ $ML_CurrentTab 1)
        cond [&& [= $iTab 0][> $ML_CurrentTab 1]] [guitab $arg1
        ]    [    > $iTab 0                     ] [guitab (+ $iTab 1)
        ]
        iMap = (* $iTab $ML_MapsPerTab)
        //=====================================================================================================
        //  Is this the active Tab? If so, populate.
        if (= $ML_CurrentTab $guitabnum) [
            guialign 0 [// H
                guistrut $arg4 1
                if (< $ML_NumOfMaps 0) [
                    guilist [// V
                        guistrut $arg3 1
                        guialign 0 [guitext "^f4No maps found"] // Map list is empty.
                    ]
                    iCol = 2
                    while [<= $iCol $arg5] [
                        guilist [ guistrut $arg3 1 ]
                        iCol = (+ $iCol 1)
                    ]
                ][
                    iCol = 1
                    while [<= $iCol $arg5] [
                        guilist [// V
                            guistrut $arg3 1
                            iEND = (+ (* $iTab $ML_MapsPerTab) (- (* $iCol $arg4) 1))
                            while [<= $iMap $iEND] [
                                if (> $iMap $ML_NumOfMaps) [
                                    iMap = (+ $iEND 1) // exitloop/break
                                ][
                                    guibutton (at $arg2 $iMap) (concat mode $ML_Mode ";" map (at $arg2 $iMap)) "map"
                                    iMap = (+ $iMap 1)
                                ]
                            ]
                        ]
                        iCol = (+ $iCol 1)
                    ]
                ]
                guibar
                guistrut 0.5
                guistayopen [
                    guilist [// V
                        if (>= (strstr $guirolloveraction "map ") 0) [
                            ML_MapName (checkrolloveraction "map " [if (> $numargs 0) [result $arg2] [at $guirollovername 0]])
                        ]
                        guialign 0 [
                            guiimage (concatword "packages/maps/" $ML_MapName ".png") () 3.875 0 "data/cardboard_missing.png"
                        ]
                        guititle (concatword "^f2/" $ML_ModeName " ^f~" $ML_MapName)
                        guistrut 0.25
                        guialign 0 [
                            guilist [
                                guistrut 9 1
                                guiradio "^f3DM"       ML_ModeType 2 [ML_ModeVrty 0; ML_SetupMode]
                                guiradio "^f3TDM"      ML_ModeType 3 [ML_ModeVrty 0; ML_SetupMode]
                                guiradio "^f6Capture"  ML_ModeType 4 [ML_ModeVrty 0; ML_SetupMode]
                                guiradio "^f6Hold"     ML_ModeType 6 [ML_ModeVrty 0; ML_SetupMode]
                                guiradio "^f2CTF"      ML_ModeType 5 [ML_ModeVrty 0; ML_SetupMode]
                                guiradio "^f2Protect"  ML_ModeType 7 [ML_ModeVrty 0; ML_SetupMode]
                                guiradio "^f2Collect"  ML_ModeType 8 [ML_ModeVrty 0; ML_SetupMode]
                                guiradio "^f9Parkour"  ML_ModeType 1 [ML_ModeVrty 0; ML_SetupMode]
                                guiradio "^f0CoopEdit" ML_ModeType 0 [ML_ModeVrty 0; ML_SetupMode]
                            ]
                            guistrut 1
                            guilist [
                                guistrut 9.5 1
                                cond [ = $ML_ModeType 0][ // Coopedit
                                    guitext "^f7Normal" "radio_on"
                                    guistrut 6
                                ][ = $ML_ModeType 1][ // Parkour
                                    guiradio  "^f7Normal"         ML_ModeVrty 0 [ML_SetupMode]
                                    guiradio  "^f8Race"           ML_ModeVrty 1 [ML_SetupMode]
                                    guistrut 5
                                ][<= $ML_ModeType 3][
                                    guiradio  "^f7Normal"         ML_ModeVrty 0 [ML_SetupMode]
                                    guiradio  "^f8InstaGib"       ML_ModeVrty 1 [ML_SetupMode]
                                    guiradio  "^f5Tactics"        ML_ModeVrty 2 [ML_SetupMode]
                                    guiradio  "^f8Insta^f5Tac"    ML_ModeVrty 3 [ML_SetupMode]
                                    guistrut 2
                                ][ = $ML_ModeType 4][
                                    guiradio  "^f7Normal"         ML_ModeVrty 0 [ML_SetupMode]
                                    guiradio  "^f8Regen"          ML_ModeVrty 1 [ML_SetupMode]
                                    guistrut 5
                                ][ = $ML_ModeType 5][
                                    guiradio  "^f7Normal"         ML_ModeVrty 0 [ML_SetupMode]
                                    guiradio  "^f8InstaGib"       ML_ModeVrty 1 [ML_SetupMode]
                                    guiradio  "^f8Explosive"      ML_ModeVrty 2 [ML_SetupMode]
                                    guiradio  "^f8R1CTF"          ML_ModeVrty 3 [ML_SetupMode]
                                    guistrut 3
                                ][>= $ML_ModeType 6][
                                    guiradio  "^f7Normal"         ML_ModeVrty 0 [ML_SetupMode]
                                    guiradio  "^f8InstaGib"       ML_ModeVrty 1 [ML_SetupMode]
                                    guistrut 4
                                ]
                            ]
                        ]
                    ]
                ]
            ]
        ]
        //=====================================================================================================
    ]
]

ML_SetupMode = [
    case ($ML_ModeType)  0         [ML_Mode  1; ML_ModeMaps 0; ML_ModeName "coop"         //  0 "CoopEdit"
    ] 1 [cond [=  $ML_ModeVrty 0]  [ML_Mode 17; ML_ModeMaps 0; ML_ModeName "parkour"      //  1 "Parkour"
             ][=  $ML_ModeVrty 1]  [ML_Mode 25; ML_ModeMaps 0; ML_ModeName "race"]
    ] 2 [case   ($ML_ModeVrty) 0   [ML_Mode  0; ML_ModeMaps 0; ML_ModeName "ffa"          //  2 "DM"
                             ] 1   [ML_Mode  3; ML_ModeMaps 0; ML_ModeName "insta"
                             ] 2   [ML_Mode  5; ML_ModeMaps 0; ML_ModeName "tac"
                             ] 3   [ML_Mode 18; ML_ModeMaps 0; ML_ModeName "instatac"]
    ] 3 [case   ($ML_ModeVrty) 0   [ML_Mode  2; ML_ModeMaps 0; ML_ModeName "tdm"          //  3 "TDM"
                             ] 1   [ML_Mode  4; ML_ModeMaps 0; ML_ModeName "teaminsta"
                             ] 2   [ML_Mode  6; ML_ModeMaps 0; ML_ModeName "teamtac"
                             ] 3   [ML_Mode 19; ML_ModeMaps 0; ML_ModeName "teaminstatac"]
    ] 4 [cond [=  $ML_ModeVrty 0]  [ML_Mode  7; ML_ModeMaps 1; ML_ModeName "capture"      //  4 "Capture"
             ][>= $ML_ModeVrty 1]  [ML_Mode  8; ML_ModeMaps 1; ML_ModeName "regencapture"]
    ] 5 [case   ($ML_ModeVrty) 0   [ML_Mode  9; ML_ModeMaps 2; ML_ModeName "ctf"          //  5 "CTF"
                             ] 1   [ML_Mode 10; ML_ModeMaps 2; ML_ModeName "instactf"
                             ] 2   [ML_Mode 22; ML_ModeMaps 2; ML_ModeName "ectf"
                             ] 3   [ML_Mode 23; ML_ModeMaps 2; ML_ModeName "r1ctf"]
    ] 6 [cond [=  $ML_ModeVrty 0]  [ML_Mode 13; ML_ModeMaps 1; ML_ModeName "hold"         //  6 "Hold"
             ][=  $ML_ModeVrty 1]  [ML_Mode 14; ML_ModeMaps 1; ML_ModeName "instahold"]
    ] 7 [cond [=  $ML_ModeVrty 0]  [ML_Mode 11; ML_ModeMaps 2; ML_ModeName "protect"      //  7 "Protect"
             ][=  $ML_ModeVrty 1]  [ML_Mode 12; ML_ModeMaps 2; ML_ModeName "instaprotect"]
    ] 8 [cond [=  $ML_ModeVrty 0]  [ML_Mode 15; ML_ModeMaps 2; ML_ModeName "collect"      //  8 "Collect"
             ][=  $ML_ModeVrty 1]  [ML_Mode 16; ML_ModeMaps 2; ML_ModeName "instacollect"]
    ]
]


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  Tests:

newgui "testfont" [
    guinoautotab [
        guitext " A B C D E F G H  À Á Â Ã Ä Å Æ Ç "
        guitext " I J K L M N O P  È É Ê Ë Ì Í Î Ï "
        guitext " Q R S T U V W X  Ñ Ò Ó Ô Õ Ö Ø Ù "
        guitext " Y Z 0 1 2 3 4    Ú Û Ü Ý Ÿ     ß "
        guitext " a b c d e f g h  à á â ã ä å æ ç "
        guitext " i j k l m n o p  è é ê ë ì í î ï "
        guitext " q r s t u v w x  ñ ò ó ô õ ö ø ù "
        guitext " y z 5 6 7 8 9    ú û ü ý ÿ ` ~ ^^ "
        guistrut 1
        guitext " Ą ą Ć ć Č č Ď ď  Б Г Д Ж З И Й Л "
        guitext " Ę ę Ě ě Ğ ğ İ ı  П У Ф Ц Ч Ш Щ Ъ "
        guitext " Ł ł Ń ń Ň ň Ő ő  Ы Ь Э Ю Я б в г "
        guitext " Œ œ Ř ř Ś ś Ş ş  д ж з и й к л м "
        guitext " Š š Ť ť Ů ů Ű ű  н п т ф ц ч ш щ "
        guitext " Ź ź Ż ż Ž ž      ъ ы ь э ю я є Ґ "
        guitext " , . ; : ! ? ' ^"  ґ @ # $ Є % &   "
        guitext " < > ( ) [ ] { }  + - * = / \ _ | "
    guitab "2"
        guitext " ABCDEFGH  ÀÁÂÃÄÅÆÇ "
        guitext " IJKLMNOP  ÈÉÊËÌÍÎÏ "
        guitext " QRSTUVWX  ÑÒÓÔÕÖØÙ "
        guitext " YZ01234   ÚÛÜÝŸ  ß "
        guitext " abcdefgh  àáâãäåæç "
        guitext " ijklmnop  èéêëìíîï "
        guitext " qrstuvwx  ñòóôõöøù "
        guitext " yz56789   úûüýÿ`~^^ "
        guistrut 1
        guitext " ĄąĆćČčĎď  БГДЖЗИЙЛ "
        guitext " ĘęĚěĞğİı  ПУФЦЧШЩЪ "
        guitext " ŁłŃńŇňŐő  ЫЬЭЮЯбвг "
        guitext " ŒœŘřŚśŞş  джзийклм "
        guitext " ŠšŤťŮůŰű  нптфцчшщ "
        guitext " ŹźŻżŽž    ъыьэюяєҐ "
        guitext " ,.;:!?'^"  ґ@#$Є%&  "
        guitext " <>()[]{}  +-*=/\_| "
    guitab "3"
        guitext "^tThe quick brown fox jumps over the lazy dog."
        guistrut 1
        guitext "^tLorem ipsum dolor sit amet, consectetur adipiscing elit."
        guitext "Phasellus malesuada urna nec lectus scelerisque vehicula."
        guitext "In id lorem nec dui fringilla vestibulum. Integer"
        guitext "scelerisque consequat nibh. Integer feugiat tortor eget"
        guitext "tortor posuere, et consequat sem venenatis. Etiam mi purus,"
        guitext "iaculis vel orci vehicula, efficitur facilisis sem. Nunc"
        guitext "bibendum nisi vel dignissim efficitur. Nulla in libero eget"
        guitext "neque scelerisque interdum. Nullam cursus metus sed libero"
        guitext "tincidunt aliquam. Integer aliquet felis elit, ut viverra"
        guitext "nibh mollis ut. Pellentesque congue, urna a lobortis"
        guitext "porttitor, ipsum justo pulvinar lorem, non vehicula magna"
        guitext "arcu in tellus. Fusce id odio velit. Nullam et massa dui."
        guitext "Suspendisse potenti. Aenean laoreet justo id aliquet tempus."
    //guitab "~"
    //    guitext "-|-----------------|-|-----------------|-"
    //    guitext "0| A B C D E F G H |0| À Á Â Ã Ä Å Æ Ç |0"
    //    guitext "1| I J K L M N O P |1| È É Ê Ë Ì Í Î Ï |1"
    //    guitext "2| Q R S T U V W X |2| Ñ Ò Ó Ô Õ Ö Ø Ù |2"
    //    guitext "3| Y Z 0 1 2 3 4   |3| Ú Û Ü Ý Ÿ     ß |3"
    //    guitext "4| a b c d e f g h |4| à á â ã ä å æ ç |4"
    //    guitext "5| i j k l m n o p |5| è é ê ë ì í î ï |5"
    //    guitext "6| q r s t u v w x |6| ñ ò ó ô õ ö ø ù |6"
    //    guitext "7| y z 5 6 7 8 9   |7| ú û ü ý ÿ ` ~ ^^ |7"
    //    guitext "-|-----------------|-|-----------------|-"
    //    guitext "0| Ą ą Ć ć Č č Ď ď |0| Б Г Д Ж З И Й Л |0"
    //    guitext "1| Ę ę Ě ě Ğ ğ İ ı |1| П У Ф Ц Ч Ш Щ Ъ |1"
    //    guitext "2| Ł ł Ń ń Ň ň Ő ő |2| Ы Ь Э Ю Я б в г |2"
    //    guitext "3| Œ œ Ř ř Ś ś Ş ş |3| д ж з и й к л м |3"
    //    guitext "4| Š š Ť ť Ů ů Ű ű |4| н п т ф ц ч ш щ |4"
    //    guitext "5| Ź ź Ż ż Ž ž     |5| ъ ы ь э ю я є Ґ |5"
    //    guitext "6| , . ; : ! ? ' ^" |6| ґ @ # $ Є % &   |6"
    //    guitext "7| < > ( ) [ ] { } |7| + - * = / \ _ | |7"
    //    guitext "-|-----------------|-|-----------------|-"
    ]
]


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
newgui "testpadding" [
    guinoautotab [
        guiimage "packages/misanthropx/black.png" [] 6
    guitab "IW"
        guiimage "packages/misanthropx/white.png" [] 6
    guitab "IP"
        guiimage "packages/textures/steep_fur_n.png" [] 6
    guitab "BH"
        guilist [// H
            guistrut  5 1
            guialign -1 [guistrut 24 1; guibar]// V  bar_H
        ]
        guilist [// H
            guistrut  2 1
            guialign  0 [guistrut 24 1; guibar]// V  bar_H
        ]
        guilist [// H
            guistrut  5 1
            guialign  1 [guistrut 24 1; guibar]// V  bar_H
        ]
    guitab "BV"
        guilist [// H
            guilist [// V
                guistrut 10 1
                guialign -1 [guistrut 12 1; guibar]// H  bar_V
            ]
            guilist [// V
                guistrut  4 1
                guialign  0 [guistrut 12 1; guibar]// H  bar_V
            ]
            guilist [// V
                guistrut 10 1
                guialign  1 [guistrut 12 1; guibar]// H  bar_V
            ]
        ]
    ]
] "IB"

