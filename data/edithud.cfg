///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  Defines the editHUD, visible bottom-left while editing:
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//  Built-in edithud stuff:  (/showeditstats)
//      wtr  =  OctreeData:  Number of Triangles visible.   (% of total)
//      wvt  =  OctreeData:  Number of Vertices visible.    (% of total)
//      evt  =               Number of "Extra" Vertices??           I see this a lot: "xtraverts += gle::end()"     "gle::end()" returns "numvertexes"
//      eva  =               Number of "Extra" VertexArrays??       I see this a lot: "xtravertsva += numverts"     These both appear to be measuring vertex counts of something(s)...
//
//      ond  =  OctreeData:  Number of Nodes
//       va  =  OpenGL:      Number of VertexArrays
//       gl  =  OpenGL:      Number of DrawCalls    ("Batches")
//       oq  =  OpenGL:      Number of "Queries"
//       lm  =  MapData:     Number of Lightmap Textures
//       rp  =  MapDataish:  Number of RenderPlanes currently visible (used for water refraction & reflection)
//      pvs  =  MapData:     Number of PVS ViewCells
//
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
rehud = [clearconsole; exec "data/edithud.cfg"]

prettyentdrop = [case $entdrop 0 [result "^f~entdrop ^f20 ^"at current position^""] 1 [result "^f~entdrop ^f21 ^"at current position, to floor^""] 2 [result "^f~entdrop ^f22 ^"at selection^""] 3 [result "^f~entdrop ^f23 ^"at selection, to floor^""] [result ""]]
prettygridpower = [concatword "^f~gridpower ^f2" $gridpower "^f~(^f2" (+ (pow 2 $gridpower)) "^f~)"]
prettygetselpos = [? $enthavesel "^f~selpos (^f3~ ^f0~ ^f1~^f~)" (concatword "^f~selpos (^f3"(at $getselpos       0)" ^f0"(at $getselpos       1)" ^f1"(at $getselpos       2)"^f~)")]
prettygetselsavedpos  = [if (!=s $getselsavedpos  "0 0 0") [concatword "^f~savedselpos (^f3" (at $getselsavedpos  0)" ^f0"(at $getselsavedpos  1)" ^f1"(at $getselsavedpos  2)"^f~)"]]
prettygetselsavedsize = [if (!=s $getselsavedsize "0 0 0") [concatword "^f~savedselsize (^f3"(at $getselsavedsize 0)" ^f0"(at $getselsavedsize 1)" ^f1"(at $getselsavedsize 2)"^f~)"]]


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
nodebug [
    defsvar  debugthis      ""
    defvar   debugthiscolor 0 8 9
    defvar   debugthisparty 0 0 1

    defvarp  edithud_showmyposition 0 0 1
    defvarp  edithud_showmyrotation 0 0 1

    defvarp  edithud_showtexhistory 0 0 1
    defvarp  edithud_showselinfo    0 0 1

    defvarp  edithud_showtexparams      0 1 1
    defvarp  edithud_showtexlayerparams 0 0 1

    defsvarp edithud_listbools       "allfaces entediting entselsnap"
    defsvarp edithud_listboolsshy    "gridlookup showwaypoints"
    defsvarp edithud_listboolsnotice "dropwaypoints"
    defsvarp edithud_listvars        "floatspeed prettygridpower prettygetselpos prettygetselsavedpos prettygetselsavedsize"

    defvar   EH_ParticleTypeIsValid 0 0 1
    defsvar  EH_DeltaHighlight      0 0 5
]


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
edithud = [
    cond [|| [= $delta_active 11][= $delta_active 21][= $delta_active 31]] [EH_DeltaHighlight 1
    ]    [|| [= $delta_active 12][= $delta_active 22][= $delta_active 32]] [EH_DeltaHighlight 2
    ]    [|| [= $delta_active 13][= $delta_active 23][= $delta_active 33]] [EH_DeltaHighlight 3
    ]    [|| [= $delta_active 14][= $delta_active 24][= $delta_active 34]] [EH_DeltaHighlight 4
    ]    [|| [= $delta_active 15][= $delta_active 25][= $delta_active 35]] [EH_DeltaHighlight 5
    ][EH_DeltaHighlight 0]
    concatword (
        if $debugthis              [DebugThis]
    )(  if $edithud_showmyposition [EH__PlayerPos]
    )(  if $edithud_showmyrotation [EH__PlayerRot]
    )(  if $edithud_showtexhistory [EH__TexHistory]
    )(  if $edithud_showselinfo    [EH__SelectionInfo]
    )(                              EH__FaceTex_BlendMap_HeightMap
    )(  if $enthavesel             [EH__EntitySelection]
    )(                              EH__Vars
    )
]


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
gamehud = [
    if $debugthis [DebugThis]
]


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
DebugThis = [
    local String
    if $debugthisparty [
        String = (concatword "^f" (mod (*f $getmillis 0.016666) 9))
    ][  String = (concatword "^f" $debugthiscolor)
    ]
    looplist DebugMe $debugthis [
        if (> (listlen $$DebugMe) 1) [
            String = (concatword $String $DebugMe " = [ " (prettylist $$DebugMe) " ]^n")
        ][  String = (concatword $String $DebugMe " = "               $$DebugMe    "^n")
        ]
    ]
    concatword $String "^n"
]


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
EH__PlayerPos = [
    concatword "^f~position ( ^f3"(at $getcampos 0)"  ^f0"(at $getcampos 1)"  ^f1"(at $getcampos 2)" ^f~)"(? (!= $edithud_showmyrotation 0) "^n" "^n^n")
]

//#############################################################################################################################################
EH__PlayerRot = [
    concatword "^f~rotation ( ^f3" $getcampitch "  ^f0" $getcamroll "  ^f1" $getcamyaw " ^f~)^n^n"
]


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
nodebug [
    defvar iSlotCurrent  -1 -1 65535
    defvar iSlotReplaced -1 -1 65535
    defsvar TexName_Current  ""
    defsvar TexName_Replaced ""
]

EH__TexHistory = [
    //  'getcurtex' and 'getreptex' are a bit buggy while uninitialized...
    //      Can return random values based on selection.
    //      Can also cause "selection not in view" errors.
    iSlotCurrent  = (+ $getcurtex 0) //  Index of last texture used.
    iSlotReplaced = (+ $getreptex 0) //  Index of last texture replaced. ( /replace uses this. )

    TexName_Current  = (gettexname $iSlotCurrent)
    TexName_Replaced = (gettexname $iSlotReplaced)

    concatword "^f~LastUsed: ^t[^f0" $iSlotCurrent "^f~] ^f0^"" $TexName_Current "^"^n^f~LastReplaced:^t[^f0" $iSlotReplaced "^f~] ^f0^"" $TexName_Replaced "^"^n^n"
]


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
EH__SelectionInfo = [
    local String
    //  What:
    String = (concatword         "^f~havesel ^f2"    $havesel    "^n")
    String = (concatword $String "^f~enthavesel ^f2" $enthavesel "^n^n")

    //  Where:
    String = (concatword $String "^f~getselpos ( ^f3" (+ (at $getselpos 0)) " ^f0" (+ (at $getselpos 1)) " ^f1" (+ (at $getselpos 2)) " ^f~)^n^n")

    String = (concatword $String "^f~getselsavedpos ( ^f3" (+ (at $getselsavedpos 0)) " ^f0" (+ (at $getselsavedpos 1)) " ^f1" (+ (at $getselsavedpos 2)) " ^f~)  ")
    String = (concatword $String "^f~selmoved ^f2" $selmoved "^n") // If 'getselpos' differs from value stored with 'getselsavedpos', this will return 1.
    String = (concatword $String "^f~getselsavedsize ( ^f3" (+ (at $getselsavedsize 0)) " ^f0" (+ (at $getselsavedsize 1)) " ^f1" (+ (at $getselsavedsize 2)) " ^f~)^n^n")

    //  Doing:
    String = (concatword $String "^f~dragging ^f2"  $dragging  "^n")
    String = (concatword $String "^f~moving ^f2"    $moving    "^n")
    String = (concatword $String "^f~entmoving ^f2" $entmoving "^n^n")

    //  How:
    String = (concatword $String "^f~selectcorners ^f2" $selectcorners "^n^n")

    String = (concatword $String "^f~passthroughcube ^f2" $passthroughcube "^n")
    String = (concatword $String "^f~passthroughent ^f2"  $passthroughent  "^n")
    String = (concatword $String "^f~passthrough ^f2"     $passthrough     "^n")
    String = (concatword $String "^f~passthroughsel ^f2"  $passthroughsel  "^n^n")

    String = (concatword $String "^f~gridpower ^f2"  $gridpower  "^n")
    String = (concatword $String "^f~gridlookup ^f2" $gridlookup "^n^n") //  0|1    Sets 'gridpower' to be the same as selection.

    result $String
]


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
EH__FaceTex_BlendMap_HeightMap = [
    cond [ $hmapedit ][concatword "^f~heightmap^n*  brush: ^f~[^f2" $currentbrush "^f~] ^f2^"" $currentbrushname "^"^n^n"
    ][$blendpaintmode][concatword "^f~blendmap^n*  mode: ^f2^""(at $Labels_BlendPaintMode $blendpaintmode)"^"^f~^n*  brush: ^f~[^f2"(curblendbrush)"^f~] ^f2^""(getblendbrushname $curblendbrush)"^"^n^n"
    ][ ! $enthavesel ][
        if (<= $getseltex 0) [
            result "^f~[^f2~^f~] ^f2^"~^"^n^n" //  None or SkyTexture or subdivided-cube selected.
        ][
            if (= $edithud_showtexparams 0) [
                concatword "^f~[^f2" $getseltex "^f~] ^f2^"" (gettexname $getseltex) "^"^n^n"
            ][
                concatword "^f~[^f2" $getseltex "^f~] ^f2^"" (gettexname $getseltex) "^"^n" (
                    EH_TexColor      $getseltex 2 "*"
                )(  EH_TexAlpha      $getseltex 2 "*"
                )(  EH_TexOffset     $getseltex 2 "*" (? (= $EH_DeltaHighlight 1) 1 (? (= $EH_DeltaHighlight 2) 2 0))
                )(  EH_TexRotate     $getseltex 2 "*" (= $EH_DeltaHighlight 3)
                )(  EH_TexScale      $getseltex 2 "*" (= $EH_DeltaHighlight 4)
                )(  EH_TexScroll     $getseltex 2 "*"
                )(  EH_TexSmooth     $getseltex 2 "*"
                )(  EH_vShaderParams $getseltex 2 "*"
                )(  EH_TexLayer      $getseltex 6 "+"
                ) "^n"
            ]
        ]
    ]
]

//#############################################################################################################################################
// ARGS 1: INDEX    TextureSlot
//      2: INT      Text Color
//      3: STRING   Prefix
//      4: BOOL     Highlight

EH_TexColor = [
    if (|| [!=f (at (getvcolor $arg1) 0) 1.0] [!=f (at (getvcolor $arg1) 1) 1.0] [!=f (at (getvcolor $arg1) 2) 1.0]) [
        concatword "^f~" $arg3 " color:^t^f3" (at (getvcolor $arg1) 0) "  ^f0" (at (getvcolor $arg1) 1) "  ^f1" (at (getvcolor $arg1) 2) "^n"
    ]
]

EH_TexAlpha = [
    if (|| [!=f (at (getvalpha $arg1) 0) 0.5] [!=f (at (getvalpha $arg1) 1) 0.0]) [
        concatword "^f~" $arg3 " alpha:^tfront: ^f5" (at (getvalpha  $arg1) 0) "  ^f~back: ^f5" (at (getvalpha  $arg1) 1) "^n"
    ]
]

EH_TexRotate = [
    if (|| $arg4 [getvrotate $arg1]) [
        concatword (? $arg4 "^f8" "^f~") $arg3 " rotate:^t^f" $arg2 (getvrotate $arg1) " ^f~^"" (at $Labels_TexRotate (getvrotate $arg1)) "^"^n"
    ]
]

EH_TexOffset = [
    if (|| $arg4 [!= (at (getvoffset $arg1) 0) 0] [!= (at (getvoffset $arg1) 1) 0]) [
        concatword (? $arg4 "^f8" "^f~") $arg3 " offset:^t" (? (= $arg4 1) "^f8" "^f3") (at (getvoffset $arg1) 0) "^t" (? (= $arg4 2) "^f8" "^f0") (at (getvoffset $arg1) 1) "^n"
    ]
]

EH_TexScale = [
    if (|| $arg4 [!=f (getvscale $arg1) 1.0]) [
        concatword (? $arg4 "^f8" "^f~") $arg3 " scale:^t^f" $arg2 (getvscale $arg1) "^n"
    ]
]

EH_TexScroll = [
    if (|| (!=f (at (getvscroll $arg1) 0) 0.0) (!=f (at (getvscroll $arg1) 1) 0.0) ) [
        concatword "^f~" $arg3 " scroll:^t^f3" (at (getvscroll $arg1) 0) "^t^f0" (at (getvscroll $arg1) 1) "^n"
    ]
]

EH_TexSmooth = [
    if (!= (getvsmooth $arg1) -1) [
        concatword "^f~" $arg3 " smooth: ^f" $arg2 "group: "  (getvsmooth @arg1) "  threshold: " (getsmoothangle (getvsmooth @arg1)) "^n"
    ]
]

EH_vShaderParams = [
    if (getvshaderparamnames $arg1) [
        local String; String = (concatword "^f" $arg2)
        looplist Param (getvshaderparamnames $arg1) [
            String = (concatword $String "^"" $Param "^" " (getvshaderparam $arg1 $Param) "  ")
        ]
        concatword "^f~" $arg3 " vshaderparam: " $String "^n"
    ]
]

//#############################################################################################################################################
// ARGS 1: INDEX    TextureSlot
//      2: INT      Text Color
//      3: STRING   Prefix

EH_TexLayer = [
    if (getvlayer $arg1) [
        if (= $edithud_showtexlayerparams 0) [
            concatword "^f~" $arg3 " layer:^t^f~[^f" $arg2 (getvlayer $arg1) "^f~] ^f" $arg2 "^"" (gettexname (getvlayer $arg1)) "^"^n"
        ][
            iSlot = (getvlayer $arg1)
            concatword "^f~+ layer:^t^f~[^f6" $iSlot "^f~] ^f6^""(gettexname $iSlot)"^"^n" (
                EH_TexColor      $iSlot $arg2 "+"
            )(  EH_TexAlpha      $iSlot $arg2 "+"
            )(  EH_TexOffset     $iSlot $arg2 "+"
            )(  EH_TexRotate     $iSlot $arg2 "+"
            )(  EH_TexScale      $iSlot $arg2 "+"
            )(  EH_TexScroll     $iSlot $arg2 "+"
            )(  EH_vShaderParams $iSlot $arg2 "+"
            )(  EH_TexLayerMask  $arg1      2 ">"
            )
        ]
    ]
]

EH_TexLayerMask = [
    if (getvlayermaskname $getseltex) [
        local String
        String = (concatword         "^f~" $arg3 " layermask: ^f" $arg2 "^""(getvlayermaskname  $arg1)"^"^n")
        String = (concatword $String "^f~" $arg3 " mode:^t^f"     $arg2     (getvlayermaskmode  $arg1)" ^f~^"" $(concatword "EH_LayerMaskMode_"(getvlayermaskmode $arg1)) "^"^n")
        String = (concatword $String "^f~" $arg3 " scale:^t^f"    $arg2     (getvlayermaskscale $arg1)"^n")
        result $String
    ]
]
EH_LayerMaskMode_0 = "mask only" //  Use mode 1.
EH_LayerMaskMode_1 = "mask only"
EH_LayerMaskMode_2 = "min(blendmap, mask)"
EH_LayerMaskMode_3 = "max(blendmap, mask)"
EH_LayerMaskMode_4 = "min(blendmap, (255 - mask))"
EH_LayerMaskMode_5 = "max(blendmap, (255 - mask))"


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//  Entity selection behavior has some quirks:
//
//    * enthavesel                  Does not count Hovered_Selection if you have a Clicked_Selection.
//
//    * entattr iAttr               Returns Hovered_Selection entity attribute value, even if Clicked_Selection present.
//                                      Ditto for:  entget, entindex, enttype
//                                      However, Hovered_Selection is ignored inside 'entloop', unless there is no Clicked_Selection present.
//
//    * entattr iAttr Value         Edits Clicked_Selection entity(s) and does not edit Hovered_Selection, if Clicked_Selection present.
//
//    * entproperty iAttr Value     If you edit Attributes with a Multi-Clicked_Selection, it will take the attribute value from the entity
//                                  you selected last, alter it, then apply it to all entities selected.  This is a result of how 'entproperty'
//                                  uses 'entattr' to get value, update it, then set it, and the aforementioned behavior.
//                                      Also, if you have a Hovered_Selection as well, then the value it gets will come from the Hovered_Selection.
//                                      'entproperty2' corrects these issues by using 'entloop', it is now used with default keybinds.
//
EH__EntitySelection = [
    if (= $enthavesel 1) [
        if (=s (enttype) "particles") [
            EH_ParticleTypeIsValid (|| (&& [>= (entattr 0) 0] [<= (entattr 0) 13]) (&& [>= (entattr 0) 32] [<= (entattr 0) 35]))
        ][  EH_ParticleTypeIsValid 0
        ]
        format "^f~[^f6%1^f~] ^f6%2%3%4%5%6%7^n^n" (entindex) (enttype) @[EH_EntAttr_@(enttype)]
    ][
        if (> $enthavesel 1) [
            format "^f~[^f3~^f~] ^f3%1 entities selected%2%3%4%5%6^n^n" (enthavesel) @EH_EntAttr
        ]
    ]
]


//#############################################################################################################################################
//#############################################################################################################################################
//  NOTE: Entity-Attributes are labeled 1-5, instead of 0-4, to correspond to default keybinds for editing values. ( NumRow 1-5 )
EH_EntAttr = [(
    concatword "^n" (? (= $EH_DeltaHighlight 1) "^f8" "^f9") "* attr1:^t^f9" (entattr 0) )(
    concatword "^n" (? (= $EH_DeltaHighlight 2) "^f8" "^f9") "* attr2:^t^f9" (entattr 1) )(
    concatword "^n" (? (= $EH_DeltaHighlight 3) "^f8" "^f9") "* attr3:^t^f9" (entattr 2) )(
    concatword "^n" (? (= $EH_DeltaHighlight 4) "^f8" "^f9") "* attr4:^t^f9" (entattr 3) )(
    concatword "^n" (? (= $EH_DeltaHighlight 5) "^f8" "^f9") "* attr5:^t^f9" (entattr 4) )
]


//#############################################################################################################################################
//  Miscellaneous:
EH_EntAttr_none? = $EH_EntAttr


//#############################################################################################################################################
//  Pickups:
EH_EntAttr_ammo   = $EH_EntAttr
EH_EntAttr_health = $EH_EntAttr


//#############################################################################################################################################
EH_EntAttr_base = [(
    concatword "^n" (? (= $EH_DeltaHighlight 1) "^f8" "^f~") "* ammo:^t^f2"  (entattr 0) "^f~ ^"" (? (< (entattr 0) 0) "^f5random-group" (? (> (entattr 0) 6) "^f3INVALID" (unescape (at $EH_BaseAmmoTypes (entattr 0))) ) ) "^f~^"" )(
    concatword "^n" (? (= $EH_DeltaHighlight 2) "^f8" "^f~") "* index:^t^f2" (entattr 1) (? (> (entattr 1) 0) (? (! (=s (getalias (concatword "base_"(entattr 1)) ) ""))  (concatword "^f~ ^"" (getalias (concatword "base_" (entattr 1)) ) "^"") )) )(
    concatword "^n" (? (= $EH_DeltaHighlight 3) "^f8" "^f9") "* attr3:^t^f9" (entattr 2) )(
    concatword "^n" (? (= $EH_DeltaHighlight 4) "^f8" "^f9") "* attr4:^t^f9" (entattr 3) )(
    concatword "^n" (? (= $EH_DeltaHighlight 5) "^f8" "^f9") "* attr5:^t^f9" (entattr 4) )
]
EH_BaseAmmoTypes = [
    "^f~random"
    "^f3shells"
    "^f0bullets"
    "^f2rockets"
    "^f1riflerounds"
    "^f8grenades"
    "^f9cartridges"
]


//#############################################################################################################################################
EH_EntAttr_flag = [(
    concatword "^n" (? (= $EH_DeltaHighlight 1) "^f8" "^f~") "* yaw:^t^f2"   (entattr 0) )(
    concatword "^n" (? (= $EH_DeltaHighlight 2) "^f8" "^f~") "* team:^t^f2"  (entattr 1) )(
    concatword "^n" (? (= $EH_DeltaHighlight 3) "^f8" "^f9") "* attr3:^t^f9" (entattr 2) )(
    concatword "^n" (? (= $EH_DeltaHighlight 4) "^f8" "^f9") "* attr4:^t^f9" (entattr 3) )(
    concatword "^n" (? (= $EH_DeltaHighlight 5) "^f8" "^f9") "* attr5:^t^f9" (entattr 4) )
]


//#############################################################################################################################################
EH_EntAttr_jumppad = [(
    concatword "^n" (? (= $EH_DeltaHighlight 1) "^f8" "^f~") "* forceZ:^t^f2" (entattr 0) )(
    concatword "^n" (? (= $EH_DeltaHighlight 2) "^f8" "^f~") "* forceY:^t^f2" (entattr 1) )(
    concatword "^n" (? (= $EH_DeltaHighlight 3) "^f8" "^f~") "* forceX:^t^f2" (entattr 2) )(
    concatword "^n" (? (= $EH_DeltaHighlight 4) "^f8" "^f9") "* attr4:^t^f9"  (entattr 3) )(
    concatword "^n" (? (= $EH_DeltaHighlight 5) "^f8" "^f9") "* attr5:^t^f9"  (entattr 4) )
]


//#############################################################################################################################################
EH_EntAttr_playerstart = [(
    concatword "^n" (? (= $EH_DeltaHighlight 1) "^f8" "^f~") "* yaw:^t^f2"   (entattr 0) )(
    concatword "^n" (? (= $EH_DeltaHighlight 2) "^f8" "^f~") "* team:^t^f2"  (entattr 1) )(
    concatword "^n" (? (= $EH_DeltaHighlight 3) "^f8" "^f9") "* attr3:^t^f9" (entattr 2) )(
    concatword "^n" (? (= $EH_DeltaHighlight 4) "^f8" "^f9") "* attr4:^t^f9" (entattr 3) )(
    concatword "^n" (? (= $EH_DeltaHighlight 5) "^f8" "^f9") "* attr5:^t^f9" (entattr 4) )
]


//#############################################################################################################################################
EH_EntAttr_teleport = [(
    concatword "^n" (? (= $EH_DeltaHighlight 1) "^f8" "^f~") "* tag:^t^f2"   (entattr 0) )(
    concatword "^n" (? (= $EH_DeltaHighlight 2) "^f8" "^f~") "* model:^t^f2" (entattr 1) (? (= (entattr 1) 0) " ^f~*teleporter*" (? (< (entattr 1) 0) " ^f~^"^f9none^f~^"" (concatword " ^f~^"" (mapmodelname (entattr 1)) "^""))) )(
    concatword "^n" (? (= $EH_DeltaHighlight 3) "^f8" "^f9") "* attr3:^t^f9" (entattr 2) )(
    concatword "^n" (? (= $EH_DeltaHighlight 4) "^f8" "^f9") "* attr4:^t^f9" (entattr 3) )(
    concatword "^n" (? (= $EH_DeltaHighlight 5) "^f8" "^f9") "* attr5:^t^f9" (entattr 4) )
]

EH_EntAttr_teledest = [(
    concatword "^n" (? (= $EH_DeltaHighlight 1) "^f8" "^f~") "* yaw:^t^f2"              (entattr 0) )(
    concatword "^n" (? (= $EH_DeltaHighlight 2) "^f8" "^f~") "* tag:^t^f2"              (entattr 1) )(
    concatword "^n" (? (= $EH_DeltaHighlight 3) "^f8" "^f~") "* preserve velocity: ^f2" (entattr 2) )(
    concatword "^n" (? (= $EH_DeltaHighlight 4) "^f8" "^f9") "* attr4:^t^f9"            (entattr 3) )(
    concatword "^n" (? (= $EH_DeltaHighlight 5) "^f8" "^f9") "* attr5:^t^f9"            (entattr 4) )
]


//#############################################################################################################################################
EH_EntAttr_envmap = [(
    concatword "^n" (? (= $EH_DeltaHighlight 1) "^f8" "^f~") "* radius:^t^f2" (entattr 0) )(
    concatword "^n" (? (= $EH_DeltaHighlight 2) "^f8" "^f9") "* attr2:^t^f9"  (entattr 1) )(
    concatword "^n" (? (= $EH_DeltaHighlight 3) "^f8" "^f9") "* attr3:^t^f9"  (entattr 2) )(
    concatword "^n" (? (= $EH_DeltaHighlight 4) "^f8" "^f9") "* attr4:^t^f9"  (entattr 3) )(
    concatword "^n" (? (= $EH_DeltaHighlight 5) "^f8" "^f9") "* attr5:^t^f9"  (entattr 4) )
]


//#############################################################################################################################################
EH_EntAttr_light = [(
    concatword "^n" (? (= $EH_DeltaHighlight 1) "^f8" "^f~") "* radius:^t^f2" (entattr 0) (? (= (entattr 0) 0) " ^f~^"infinite^"") )(
    concatword "^n" (? (= $EH_DeltaHighlight 2) "^f8" "^f~") "* red:^t^f3"    (entattr 1) )(
    concatword "^n" (? (= $EH_DeltaHighlight 3) "^f8" "^f~") "* green:^t^f0"  (entattr 2) )(
    concatword "^n" (? (= $EH_DeltaHighlight 4) "^f8" "^f~") "* blue:^t^f1"   (entattr 3) )(
    concatword "^n" (? (= $EH_DeltaHighlight 5) "^f8" "^f9") "* attr5:^t^f9"  (entattr 4) )
]

EH_EntAttr_spotlight = [(
    concatword "^n" (? (= $EH_DeltaHighlight 1) "^f8" "^f~") "* angle:^t^f2" (entattr 0) )(
    concatword "^n" (? (= $EH_DeltaHighlight 2) "^f8" "^f9") "* attr2:^t^f9" (entattr 1) )(
    concatword "^n" (? (= $EH_DeltaHighlight 3) "^f8" "^f9") "* attr3:^t^f9" (entattr 2) )(
    concatword "^n" (? (= $EH_DeltaHighlight 4) "^f8" "^f9") "* attr4:^t^f9" (entattr 3) )(
    concatword "^n" (? (= $EH_DeltaHighlight 5) "^f8" "^f9") "* attr5:^t^f9" (entattr 4) )
]


//#############################################################################################################################################
EH_EntAttr_mapmodel = [(
    concatword "^n" (? (= $EH_DeltaHighlight 1) "^f8" "^f~") "* yaw:^t^f2"   (entattr 0) )(
    concatword "^n" (? (= $EH_DeltaHighlight 2) "^f8" "^f~") "* index:^t^f2" (entattr 1) " ^f~^"" (mapmodelname (entattr 1)) "^"" )(
    if (|| [&& [>= (entattr 2) 1][<= (entattr 2) 14]] [= (entattr 2) 29]) [
        concatword "^n" (? (= $EH_DeltaHighlight 3) "^f8" "^f~") "* trigger:^t^f2" (entattr 2) " ^f~^"" $(concatword "EH_TriggerType_"(entattr 2)) "^""
    ][
        concatword "^n" (? (= $EH_DeltaHighlight 3) "^f8" "^f~") "* trigger:^t^f2" (entattr 2)
    ])(
    concatword "^n" (? (= $EH_DeltaHighlight 4) "^f8" "^f~") "* tag:^t^f2"   (entattr 3) )(
    concatword "^n" (? (= $EH_DeltaHighlight 5) "^f8" "^f9") "* attr5:^t^f9" (entattr 4) )
]
EH_TriggerType_1  = "once"
EH_TriggerType_2  = "rumble"
EH_TriggerType_3  = "toggle"
EH_TriggerType_4  = "toggle rumble"
EH_TriggerType_5  = "many"
EH_TriggerType_6  = "many rumble"
EH_TriggerType_7  = "many toggle"
EH_TriggerType_8  = "many toggle rumble"
EH_TriggerType_9  = "collide toggle rumble"
EH_TriggerType_10 = "collide toggle auto_reset rumble"
EH_TriggerType_11 = "collide toggle locked rumble"
EH_TriggerType_12 = "disappear"
EH_TriggerType_13 = "disappear rumble"
EH_TriggerType_14 = "disappear collide locked"
EH_TriggerType_29 = "disappear rumble endsp"


//#############################################################################################################################################
EH_EntAttr_sound = [(
    concatword "^n" (? (= $EH_DeltaHighlight 1) "^f8" "^f~") "* index:^t^f2"         (entattr 0) )(
    concatword "^n" (? (= $EH_DeltaHighlight 2) "^f8" "^f~") "* radius stereo:^t^f2" (entattr 1) )(
    concatword "^n" (? (= $EH_DeltaHighlight 3) "^f8" "^f~") "* radius mono:^t^f2"   (entattr 2) )(
    concatword "^n" (? (= $EH_DeltaHighlight 4) "^f8" "^f9") "* attr4:^t^f9"         (entattr 3) )(
    concatword "^n" (? (= $EH_DeltaHighlight 5) "^f8" "^f9") "* attr5:^t^f9"         (entattr 4) )
]


//#############################################################################################################################################
EH_EntAttr_start  = [(
    concatword "^n" (? (= $EH_DeltaHighlight 1) "^f8" "^f~") "* yaw:^t^f2"           (entattr 0) )(
    concatword "^n" (? (= $EH_DeltaHighlight 2) "^f8" "^f9") "* attr2:^t^f9"         (entattr 1) )(
    concatword "^n" (? (= $EH_DeltaHighlight 3) "^f8" "^f9") "* attr3:^t^f9"         (entattr 2) )(
    concatword "^n" (? (= $EH_DeltaHighlight 4) "^f8" "^f9") "* attr4:^t^f9"         (entattr 3) )(
    concatword "^n" (? (= $EH_DeltaHighlight 5) "^f8" "^f9") "* attr5:^t^f9"         (entattr 4) )
]
EH_EntAttr_finish = $EH_EntAttr_start

EH_EntAttr_checkpoint = [(
    concatword "^n" (? (= $EH_DeltaHighlight 1) "^f8" "^f~") "* yaw:^t^f2"           (entattr 0) )(
    concatword "^n" (? (= $EH_DeltaHighlight 2) "^f8" "^f~") "* index:^t^f2"         (entattr 1) )(
    concatword "^n" (? (= $EH_DeltaHighlight 3) "^f8" "^f9") "* attr3:^t^f9"         (entattr 2) )(
    concatword "^n" (? (= $EH_DeltaHighlight 4) "^f8" "^f9") "* attr4:^t^f9"         (entattr 3) )(
    concatword "^n" (? (= $EH_DeltaHighlight 5) "^f8" "^f9") "* attr5:^t^f9"         (entattr 4) )
]

//#############################################################################################################################################
EH_EntAttr_particles = [(
        String = (concatword "^n" (? (= $EH_DeltaHighlight 1) "^f8" "^f~") "* type:^t^f2" (entattr 0))
        if $EH_ParticleTypeIsValid [
            String = (concatword $String " ^f~" $(concatword "EH_PrtclType_"(entattr 0)) )
        ][  String = (concatword $String " ^f~^"^f3INVALID^f~^"")
        ]
        result $String
    )(
        if $EH_ParticleTypeIsValid [
            String = (concatword "^n" (? (= $EH_DeltaHighlight 2) "^f8" "^f~") "* ")
            if (|| [= (entattr 0) 4] [= (entattr 0) 7]) [
                if (&& [>= (entattr 1) 256] [<= (entattr 1) 319]) [
                    String = (concatword $String "variety:^t^f2" (entattr 1))
                ][  String = (concatword $String "dir:^t^f2" (entattr 1))
                ]
            ][
                String = (concatword $String $(concatword "EH_PrtclAttr1_"(entattr 0)) ":^t^f2" (entattr 1))
            ]
            cond [&& [>= (strstr $String "dir") 0][>= (entattr 1)   0][<= (entattr 1)   5]]  [ String = (concatword $String " ^f~^"" $(concatword "EH_PrtclDir_"(entattr 1)) "^"")
            ]    [&& [>= (strstr $String "var") 0][>= (entattr 1) 256][<= (entattr 1) 320]]  [ String = (concatword $String " ^f~^"" $(concatword "EH_PrtclVar_"(mod (entattr 1) 64)) "^"")
            ]
        ][
            String = (concatword "^n" (? (= $EH_DeltaHighlight 2) "^f8" "^f9") "* attr2:^t^f9" (entattr 1))
        ]
        result $String
    )(
        if (&& $EH_ParticleTypeIsValid [!=s $(concatword "EH_PrtclAttr2_"(entattr 0)) "0"]) [
            concatword "^n" (? (= $EH_DeltaHighlight 3) "^f8" "^f~") "* " $(concatword "EH_PrtclAttr2_"(entattr 0)) ":^t^f2" (at $entget 3)
        ][  concatword "^n" (? (= $EH_DeltaHighlight 3) "^f8" "^f9") "* attr3:^t^f9" (entattr 2)
        ]
    )(
        if (&& $EH_ParticleTypeIsValid [!=s $(concatword "EH_PrtclAttr3_"(entattr 0)) "0"]) [
            concatword "^n" (? (= $EH_DeltaHighlight 4) "^f8" "^f~") "* " $(concatword "EH_PrtclAttr3_"(entattr 0)) ":^t^f2" (at $entget 4)
        ][  concatword "^n" (? (= $EH_DeltaHighlight 4) "^f8" "^f9") "* attr4:^t^f9" (entattr 3)
        ]
    )(
        if (&& $EH_ParticleTypeIsValid [!=s $(concatword "EH_PrtclAttr4_"(entattr 0)) "0"]) [
            concatword "^n" (? (= $EH_DeltaHighlight 5) "^f8" "^f~") "* " $(concatword "EH_PrtclAttr4_"(entattr 0)) ":^t^f2" (entattr 4)
        ][  concatword "^n" (? (= $EH_DeltaHighlight 5) "^f8" "^f9") "* attr5:^t^f9" (entattr 4)
        ]
    )
]

EH_PrtclType_0  = "^"flame & smoke^""
EH_PrtclType_1  = "^"steam^""
EH_PrtclType_2  = "^"blob fountain^""
EH_PrtclType_3  = "^"fireball^""
EH_PrtclType_4  = "^"tracer^"  ^f9directions(0-5) & varieties(256-319)"
EH_PrtclType_5  = "^"meter^""
EH_PrtclType_6  = "^"meter 2^""
EH_PrtclType_7  = "^"lightning^"  ^f9directions(0-5) & varieties(256-319)"
EH_PrtclType_9  = "^"steam^"  ^f9varieties(256-319)"
EH_PrtclType_10 = "^"blob^"  ^f9varieties(256-319)"
EH_PrtclType_11 = "^"flame^""
EH_PrtclType_12 = "^"smoke^""
EH_PrtclType_13 = "^"snowflake^"  ^f9varieties(256-319)"
EH_PrtclType_32 = "^"lens flare^""
EH_PrtclType_33 = "^"lens flare^""
EH_PrtclType_34 = "^"lens flare^""
EH_PrtclType_35 = "^"lens flare^""

EH_PrtclAttr1_0  = "width"  ; EH_PrtclAttr2_0  = "size"  ; EH_PrtclAttr3_0  = "color" ; EH_PrtclAttr4_0  = "0"
EH_PrtclAttr1_1  = "dir"    ; EH_PrtclAttr2_1  = "0"     ; EH_PrtclAttr3_1  = "0"     ; EH_PrtclAttr4_1  = "0"
EH_PrtclAttr1_2  = "dir"    ; EH_PrtclAttr2_2  = "color" ; EH_PrtclAttr3_2  = "0"     ; EH_PrtclAttr4_2  = "0"
EH_PrtclAttr1_3  = "size"   ; EH_PrtclAttr2_3  = "color" ; EH_PrtclAttr3_3  = "0"     ; EH_PrtclAttr4_3  = "0"
EH_PrtclAttr1_4  = "dir_var"; EH_PrtclAttr2_4  = "length"; EH_PrtclAttr3_4  = "color" ; EH_PrtclAttr4_4  = "0"
EH_PrtclAttr1_5  = "fill"   ; EH_PrtclAttr2_5  = "color" ; EH_PrtclAttr3_5  = "0"     ; EH_PrtclAttr4_5  = "0"
EH_PrtclAttr1_6  = "fill"   ; EH_PrtclAttr2_6  = "color" ; EH_PrtclAttr3_6  = "color" ; EH_PrtclAttr4_6  = "0"
EH_PrtclAttr1_7  = "dir_var"; EH_PrtclAttr2_7  = "length"; EH_PrtclAttr3_7  = "color" ; EH_PrtclAttr4_7  = "0"
EH_PrtclAttr1_9  = "variety"; EH_PrtclAttr2_9  = "width" ; EH_PrtclAttr3_9  = "color" ; EH_PrtclAttr4_9  = "lifetime"
EH_PrtclAttr1_10 = "variety"; EH_PrtclAttr2_10 = "width" ; EH_PrtclAttr3_10 = "color" ; EH_PrtclAttr4_10 = "lifetime"
EH_PrtclAttr1_11 = "width"  ; EH_PrtclAttr2_11 = "size"  ; EH_PrtclAttr3_11 = "color" ; EH_PrtclAttr4_11 = "0"
EH_PrtclAttr1_12 = "width"  ; EH_PrtclAttr2_12 = "size"  ; EH_PrtclAttr3_12 = "color" ; EH_PrtclAttr4_12 = "0"
EH_PrtclAttr1_13 = "variety"; EH_PrtclAttr2_13 = "width" ; EH_PrtclAttr3_13 = "color" ; EH_PrtclAttr4_13 = "lifetime"
EH_PrtclAttr1_32 = "colorR" ; EH_PrtclAttr2_32 = "colorG"; EH_PrtclAttr3_32 = "colorB"; EH_PrtclAttr4_32 = "0"
EH_PrtclAttr1_33 = "colorR" ; EH_PrtclAttr2_33 = "colorG"; EH_PrtclAttr3_33 = "colorB"; EH_PrtclAttr4_33 = "0"
EH_PrtclAttr1_34 = "colorR" ; EH_PrtclAttr2_34 = "colorG"; EH_PrtclAttr3_34 = "colorB"; EH_PrtclAttr4_34 = "0"
EH_PrtclAttr1_35 = "colorR" ; EH_PrtclAttr2_35 = "colorG"; EH_PrtclAttr3_35 = "colorB"; EH_PrtclAttr4_35 = "0"

EH_PrtclDir_0 = "+Z" //"up"
EH_PrtclDir_1 = "-X" //"left"
EH_PrtclDir_2 = "+Y" //"forward"
EH_PrtclDir_3 = "-Z" //"down"
EH_PrtclDir_4 = "+X" //"right"
EH_PrtclDir_5 = "-Y" //"backward"

EH_PrtclVar_0  = "circle on planeZ"
EH_PrtclVar_1  = "circle on planeX"
EH_PrtclVar_2  = "circle on planeY"
EH_PrtclVar_3  = "cylinder shell +Z"
EH_PrtclVar_4  = "cylinder shell +X"
EH_PrtclVar_5  = "cylinder shell +Y"
EH_PrtclVar_6  = "cone shell +Z"
EH_PrtclVar_7  = "cone shell +X"
EH_PrtclVar_8  = "cone shell +Y"
EH_PrtclVar_9  = "cone shell -Z"
EH_PrtclVar_10 = "cone shell -X"
EH_PrtclVar_11 = "cone shell -Y"
EH_PrtclVar_12 = "plane volume +Z"
EH_PrtclVar_13 = "plane volume +X"
EH_PrtclVar_14 = "plane volume +Y"
EH_PrtclVar_15 = "line volume on planeY +Z"
EH_PrtclVar_16 = "line volume on planeZ +X"
EH_PrtclVar_17 = "line volume on planeX +Y"
EH_PrtclVar_18 = "line volume on planeX +Z"
EH_PrtclVar_19 = "line volume on planeY +X"
EH_PrtclVar_20 = "line volume on planeZ +Y"
EH_PrtclVar_21 = "sphere"
EH_PrtclVar_22 = "sphere"
EH_PrtclVar_23 = "sphere"
EH_PrtclVar_24 = "flat on planeZ fall|rise"
EH_PrtclVar_25 = "flat on planeX fall|rise" //  These only work with "steam,blob,snow varieties" types.
EH_PrtclVar_26 = "flat on planeY fall|rise"
EH_PrtclVar_27 = "fall|rise"
EH_PrtclVar_28 = "fall|rise"
EH_PrtclVar_29 = "fall|rise" //  These have no initialized state and just slowly fall or rise.
EH_PrtclVar_30 = "fall|rise"
EH_PrtclVar_31 = "fall|rise"

EH_PrtclVar_32 = "inverse circle on planeZ"
EH_PrtclVar_33 = "inverse circle on planeX"
EH_PrtclVar_34 = "inverse circle on planeY"
EH_PrtclVar_35 = "cylinder shell -Z"
EH_PrtclVar_36 = "cylinder shell -X"
EH_PrtclVar_37 = "cylinder shell -Y"
EH_PrtclVar_38 = "inverse cone shell +Z"
EH_PrtclVar_39 = "inverse cone shell +X"
EH_PrtclVar_40 = "inverse cone shell +Y"
EH_PrtclVar_41 = "inverse cone shell -Z"
EH_PrtclVar_42 = "inverse cone shell -X"
EH_PrtclVar_43 = "inverse cone shell -Y"
EH_PrtclVar_44 = "plane volume -Z"
EH_PrtclVar_45 = "plane volume -X"
EH_PrtclVar_46 = "plane volume -Y"
EH_PrtclVar_47 = "line volume on planeY -Z"
EH_PrtclVar_48 = "line volume on planeZ -X"
EH_PrtclVar_49 = "line volume on planeX -Y"
EH_PrtclVar_50 = "line volume on planeX -Z"
EH_PrtclVar_51 = "line volume on planeY -X"
EH_PrtclVar_52 = "line volume on planeZ -Y"
EH_PrtclVar_53 = "inverse sphere"
EH_PrtclVar_54 = "inverse sphere"
EH_PrtclVar_55 = "inverse sphere"
EH_PrtclVar_56 = "flat on planeZ fall|rise"
EH_PrtclVar_57 = "flat on planeX fall|rise" //  These only work with "steam,blob,snow varieties" types.
EH_PrtclVar_58 = "flat on planeY fall|rise"
EH_PrtclVar_59 = "fall|rise"
EH_PrtclVar_60 = "fall|rise"
EH_PrtclVar_61 = "fall|rise" //  These have no initialized state and just slowly fall or rise.
EH_PrtclVar_62 = "fall|rise"
EH_PrtclVar_63 = "fall|rise"

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
EH__Vars = [
    local String; String = ""
    looplist Bool $edithud_listbools [
        String = (concatword $String (? $$Bool "^f0" "^f4") $Bool "  ")
    ]
    looplist Bool $edithud_listboolsshy [
        if $$Bool [ String = (concatword $String "^f8" $Bool "  ") ]
    ]
    looplist Bool $edithud_listboolsnotice [
        if $$Bool [ String = (concatword $String (? (mod (div $getmillis 500) 2) "^f0" "^f3") $Bool "  ") ]
    ]
    if $edithud_listvars [
        String = (concatword $String "^n")
        looplist Var $edithud_listvars [
            if (>= (strstr $Var "pretty") 0) [
                String = (concatword $String ($Var) (? ($Var) "  "))
            ][  String = (concatword $String "^f~" $Var " ^f2" $$Var "  ")
            ]
        ]
    ]
    result $String
]

